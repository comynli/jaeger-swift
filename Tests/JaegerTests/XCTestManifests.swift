#if !canImport(ObjectiveC)
import XCTest

extension JSONSenderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSONSenderTests = [
        ("testSendSpans", testSendSpans),
        ("testSendSpansNoError", testSendSpansNoError),
        ("testSendSpansWithError", testSendSpansWithError),
    ]
}

extension JaegerExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JaegerExtensionsTests = [
        ("testMicrosecondsConversion", testMicrosecondsConversion),
        ("testUUIDFactorizationFirstHalfBits", testUUIDFactorizationFirstHalfBits),
        ("testUUIDFactorizationSecondHalfBits", testUUIDFactorizationSecondHalfBits),
    ]
}

extension JaegerJSONSenderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JaegerJSONSenderTests = [
        ("testJaegerJSONSenderWithNonJaegerSpans", testJaegerJSONSenderWithNonJaegerSpans),
        ("testSendSpansJaeger", testSendSpansJaeger),
        ("testSendSpansNoError", testSendSpansNoError),
        ("testSendSpansWithError", testSendSpansWithError),
    ]
}

extension JaegerModelsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JaegerModelsTests = [
        ("testJaegerLogConversion", testJaegerLogConversion),
        ("testJaegerSpanConversion", testJaegerSpanConversion),
        ("testJaegerSpanReferenceChildOfConversion", testJaegerSpanReferenceChildOfConversion),
        ("testJaegerSpanReferenceFollowsFromConversion", testJaegerSpanReferenceFollowsFromConversion),
        ("testJaegerTagConversionBinary", testJaegerTagConversionBinary),
        ("testJaegerTagConversionBool", testJaegerTagConversionBool),
        ("testJaegerTagConversionDouble", testJaegerTagConversionDouble),
        ("testJaegerTagConversionLong", testJaegerTagConversionLong),
        ("testJaegerTagConversionString", testJaegerTagConversionString),
        ("testPerformanceJaegerSpanConversion", testPerformanceJaegerSpanConversion),
        ("testPerformanceSpanCreationAndConversion", testPerformanceSpanCreationAndConversion),
    ]
}

extension OTModelsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OTModelsTests = [
        ("testEndSpan", testEndSpan),
        ("testOTSpanEnd", testOTSpanEnd),
        ("testOTSpanGet", testOTSpanGet),
        ("testOTSpanSet", testOTSpanSet),
        ("testParentSpanInit", testParentSpanInit),
        ("testPerformanceSpanInit", testPerformanceSpanInit),
        ("testReplaceTagInSpan", testReplaceTagInSpan),
        ("testSaveLogTagWhenSpanCompleted", testSaveLogTagWhenSpanCompleted),
        ("testSaveLogTagWhenSpanNotCompleted", testSaveLogTagWhenSpanNotCompleted),
        ("testSaveSpanTagWhenSpanCompleted", testSaveSpanTagWhenSpanCompleted),
        ("testSaveSpanTagWhenSpanNotCompleted", testSaveSpanTagWhenSpanNotCompleted),
        ("testSpanMultipleFinish", testSpanMultipleFinish),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(JSONSenderTests.__allTests__JSONSenderTests),
        testCase(JaegerExtensionsTests.__allTests__JaegerExtensionsTests),
        testCase(JaegerJSONSenderTests.__allTests__JaegerJSONSenderTests),
        testCase(JaegerModelsTests.__allTests__JaegerModelsTests),
        testCase(OTModelsTests.__allTests__OTModelsTests),
    ]
}
#endif
